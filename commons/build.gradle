plugins {
    id 'java-library'
    id 'org.springframework.boot' version "$springBootVersion" apply false
    id "org.openapi.generator" version "$openapiGeneratorVersion"
}

group rootProject.group
version rootProject.version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava {
    options.compilerArgs += [
        "-Amapstruct.defaultComponentModel=spring",
        "-Amapstruct.unmappedTargetPolicy=ERROR"
    ]
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {

    compileOnly "org.projectlombok:lombok"
    compileOnly "org.springframework.boot:spring-boot-starter-amqp"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


    api "io.sentry:sentry-logback"
    api "ch.qos.logback:logback-classic"

    api "com.fasterxml.jackson.core:jackson-core"
    api "com.fasterxml.jackson.core:jackson-databind"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    api "org.springframework:spring-core"
    api "org.springframework:spring-context"

    api 'javax.annotation:javax.annotation-api'
    api "io.swagger.core.v3:swagger-annotations"

    api 'org.mapstruct:mapstruct'

    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'io.micrometer:micrometer-registry-prometheus'

}


jacoco {
    toolVersion = "$jacocoVersion"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/*Test.*',
                '**/generated/**',
                '**/lombok/**',
                '**/config/**'
            ])
        }))
    }
}

tasks.test {
    finalizedBy jacocoTestReport
}


test {
    useJUnitPlatform()
}

jar {
    exclude("application.yml")
}
